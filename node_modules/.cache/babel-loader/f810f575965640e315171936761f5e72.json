{"ast":null,"code":"var _jsxFileName = \"/Users/voskaul5058/Desktop/reactLearm/learnReact/src/Test/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { gsap } from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  const boxRef = useRef();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    gsap.to(boxRef.current, {\n      rotation: \"360\"\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      ref: boxRef,\n      children: \"xxxxxxxx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count + 1);\n      },\n      children: \"Click s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"27MB2x21bjmVe1kpjvBSsA9fVUo=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/voskaul5058/Desktop/reactLearm/learnReact/src/Test/Test.js"],"names":["React","useRef","useEffect","useState","gsap","Test","boxRef","count","setCount","to","current","rotation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,MAAM,GAAGL,MAAM,EAArB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,IAAI,CAACK,EAAL,CAAQH,MAAM,CAACI,OAAf,EAAwB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAxB;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEL,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvBuBF,I;;KAAAA,I","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\"\nimport { gsap } from \"gsap\"\n\nexport default function Test() {\n  const boxRef = useRef()\n  const [count, setCount] = useState(0)\n\n  useEffect(() => {\n    gsap.to(boxRef.current, { rotation: \"360\" })\n  })\n\n  return (\n    <div>\n      <div className=\"box\" ref={boxRef}>\n        xxxxxxxx\n      </div>\n      <p>{count}</p>\n      <button\n        onClick={() => {\n          setCount(count + 1)\n        }}\n      >\n        Click s\n      </button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}