{"ast":null,"code":"var _jsxFileName = \"/Users/voskaul5058/Desktop/reactLearm/learnReact/herokureact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Option 1', 'Option 2'];\nexport default function ControllableStates() {\n  _s();\n\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: `value: ${value !== null ? `'${value}'` : 'null'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `inputValue: '${inputValue}'`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      inputValue: inputValue,\n      onInputChange: (event, newInputValue) => {\n        setInputValue(newInputValue);\n      },\n      id: \"controllable-states-demo\",\n      options: options,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Controllable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControllableStates, \"pS+GIa0f4n/0SDHG8EibyuvGghw=\");\n\n_c = ControllableStates;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControllableStates\");","map":{"version":3,"sources":["/Users/voskaul5058/Desktop/reactLearm/learnReact/herokureact/src/App.js"],"names":["React","TextField","Autocomplete","options","ControllableStates","value","setValue","useState","inputValue","setInputValue","event","newValue","newInputValue","width","params"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,OAAO,GAAG,CAAC,UAAD,EAAa,UAAb,CAAhB;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAeJ,OAAO,CAAC,CAAD,CAAtB,CAA1B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BT,KAAK,CAACO,QAAN,CAAe,EAAf,CAApC;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAO,UAASF,KAAK,KAAK,IAAV,GAAkB,IAAGA,KAAM,GAA3B,GAAgC,MAAO;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAO,gBAAeG,UAAW;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,QAAQ,EAAE,CAACK,KAAD,EAAQC,QAAR,KAAqB;AAC7BL,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,OAJH;AAKE,MAAA,UAAU,EAAEH,UALd;AAME,MAAA,aAAa,EAAE,CAACE,KAAD,EAAQE,aAAR,KAA0B;AACvCH,QAAAA,aAAa,CAACG,aAAD,CAAb;AACD,OARH;AASE,MAAA,EAAE,EAAC,0BATL;AAUE,MAAA,OAAO,EAAET,OAVX;AAWE,MAAA,EAAE,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT,OAXN;AAYE,MAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,QAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAZ3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzBuBV,kB;;KAAAA,kB","sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nconst options = ['Option 1', 'Option 2'];\n\nexport default function ControllableStates() {\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  return (\n    <div>\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\n      <div>{`inputValue: '${inputValue}'`}</div>\n      <br />\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        id=\"controllable-states-demo\"\n        options={options}\n        sx={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}