{"ast":null,"code":"var _jsxFileName = \"/Users/voskaul5058/Desktop/reactLearm/learnReact/src/gsaptest/GsapTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GsapTest() {\n  _s();\n\n  const boxRef = useRef();\n  useEffect(() => {\n    gsap.to(boxRef.current, {\n      rotation: \"+=360\"\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    ref: boxRef,\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n  /*\n  const header = React.createRef()\n   useEffect(() => {\n    gsap.to(header.current, { color: \"red\", duration: 2 })\n  }, [header])\n   return (\n    <div>\n      <h1 ref={header}>hellow Gsap world!</h1>\n    </div>\n  )\n  */\n}\n\n_s(GsapTest, \"OEdoRTW0ftzTzCoByg4W1KCWfBg=\");\n\n_c = GsapTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"GsapTest\");","map":{"version":3,"sources":["/Users/voskaul5058/Desktop/reactLearm/learnReact/src/gsaptest/GsapTest.js"],"names":["React","useRef","useEffect","gsap","GsapTest","boxRef","to","current","rotation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,IAAI,CAACG,EAAL,CAAQD,MAAM,CAACE,OAAf,EAAwB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAxB;AACD,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEH,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;;GAxBuBD,Q;;KAAAA,Q","sourcesContent":["import React, { useRef, useEffect } from \"react\"\nimport { gsap } from \"gsap\"\n\nexport default function GsapTest() {\n  const boxRef = useRef()\n  useEffect(() => {\n    gsap.to(boxRef.current, { rotation: \"+=360\" })\n  })\n\n  return (\n    <div className=\"box\" ref={boxRef}>\n      Hello\n    </div>\n  )\n  /*\n  const header = React.createRef()\n\n  useEffect(() => {\n    gsap.to(header.current, { color: \"red\", duration: 2 })\n  }, [header])\n\n  return (\n    <div>\n      <h1 ref={header}>hellow Gsap world!</h1>\n    </div>\n  )\n  */\n}\n"]},"metadata":{},"sourceType":"module"}